dimensions:
        bio_time = 242 ;
        s_rho = 36 ;
        eta_rho = 359 ;
        xi_rho = 336 ;
        time = UNLIMITED ; // (7281 currently)
        eta_u = 359 ;
        xi_u = 335 ;
        eta_v = 358 ;
        xi_v = 336 ;
variables:
        double CalC_east(bio_time, s_rho, eta_rho) ;
                CalC_east:long_name = "carbon detritus east boundary condition" ;
                CalC_east:units = "milligrams_detritusC meter-3" ;
                CalC_east:field = "CalC_east, scalar, series" ;
                CalC_east:missing_value = 1.e+37 ;
                CalC_east:time = "bio_time" ;
        double CalC_south(bio_time, s_rho, xi_rho) ;
                CalC_south:long_name = "carbon detritus south boundary condition" ;
                CalC_south:units = "milligrams_detritusC meter-3" ;
                CalC_south:field = "CalC_south, scalar, series" ;
                CalC_south:missing_value = 1.e+37 ;
                CalC_south:time = "bio_time" ;
        double DON_east(bio_time, s_rho, eta_rho) ;
                DON_east:long_name = "dissolved organic nitrogen concentration east boundary condition" ;
                DON_east:units = "millimole_nitrogen meter-3" ;
                DON_east:field = "DON_east, scalar, series" ;
                DON_east:missing_value = 1.e+37 ;
                DON_east:time = "bio_time" ;
        double DON_south(bio_time, s_rho, xi_rho) ;
                DON_south:long_name = "dissolved organic nitrogen concentration south boundary condition" ;
                DON_south:units = "millimole_nitrogen meter-3" ;
                DON_south:field = "DON_south, scalar, series" ;
                DON_south:missing_value = 1.e+37 ;
                DON_south:time = "bio_time" ;
        double DOP_east(bio_time, s_rho, eta_rho) ;
                DOP_east:long_name = "nitrate concentration east boundary condition" ;
                DOP_east:units = "millimole_nitrate meter-3" ;
                DOP_east:field = "NO3_east, scalar, series" ;
                DOP_east:missing_value = 1.e+37 ;
                DOP_east:time = "bio_time" ;
        double DOP_south(bio_time, s_rho, xi_rho) ;
                DOP_south:long_name = "nitrate concentration south boundary condition" ;
                DOP_south:units = "millimole_nitrate meter-3" ;
                DOP_south:field = "NO3_south, scalar, series" ;
                DOP_south:missing_value = 1.e+37 ;
                DOP_south:time = "bio_time" ;
        double FeD_east(bio_time, s_rho, eta_rho) ;
                FeD_east:long_name = "dissolved iron concentration east boundary condition" ;
                FeD_east:units = "micromole_iron meter-3" ;
                FeD_east:field = "FeD_east, scalar, series" ;
                FeD_east:missing_value = 1.e+37 ;
                FeD_east:time = "bio_time" ;
        double FeD_south(bio_time, s_rho, xi_rho) ;
                FeD_south:long_name = "dissolved iron concentration south boundary condition" ;
                FeD_south:units = "micromole_iron meter-3" ;
                FeD_south:field = "FeD_south, scalar, series" ;
                FeD_south:missing_value = 1.e+37 ;
                FeD_south:time = "bio_time" ;
        double FeLp_east(bio_time, s_rho, eta_rho) ;
                FeLp_east:long_name = "diatom iron concentration east boundary condition" ;
                FeLp_east:units = "micromole_iron meter-3" ;
                FeLp_east:field = "FeLp_east, scalar, series" ;
                FeLp_east:missing_value = 1.e+37 ;
                FeLp_east:time = "bio_time" ;
        double FeLp_south(bio_time, s_rho, xi_rho) ;
                FeLp_south:long_name = "diatom iron concentration south boundary condition" ;
                FeLp_south:units = "micromole_iron meter-3" ;
                FeLp_south:field = "FeLp_south, scalar, series" ;
                FeLp_south:missing_value = 1.e+37 ;
                FeLp_south:time = "bio_time" ;
        double FeSp_east(bio_time, s_rho, eta_rho) ;
                FeSp_east:long_name = "nanophytoplankton iron concentration east boundary condition" ;
                FeSp_east:units = "micromole_iron meter-3" ;
                FeSp_east:field = "FeSp_east, scalar, series" ;
                FeSp_east:missing_value = 1.e+37 ;
                FeSp_east:time = "bio_time" ;
        double FeSp_south(bio_time, s_rho, xi_rho) ;
                FeSp_south:long_name = "nanophytoplankton iron concentration south boundary condition" ;
                FeSp_south:units = "micromole_iron meter-3" ;
                FeSp_south:field = "FeSp_south, scalar, series" ;
                FeSp_south:missing_value = 1.e+37 ;
                FeSp_south:time = "bio_time" ;
        double LPCh_east(bio_time, s_rho, eta_rho) ;
                LPCh_east:long_name = "large phytoplankton chlorophyll concentration east boundary condition" ;
                LPCh_east:units = "milligrams_chlorophyll meter-3" ;
                LPCh_east:field = "LPCh_east, scalar, series" ;
                LPCh_east:missing_value = 1.e+37 ;
                LPCh_east:time = "bio_time" ;
        double LPCh_south(bio_time, s_rho, xi_rho) ;
                LPCh_south:long_name = "large phytoplankton chlorophyll concentration south boundary condition" ;
                LPCh_south:units = "milligrams_chlorophyll meter-3" ;
                LPCh_south:field = "LPCh_south, scalar, series" ;
                LPCh_south:missing_value = 1.e+37 ;
                LPCh_south:time = "bio_time" ;
        double NH4_east(bio_time, s_rho, eta_rho) ;
                NH4_east:long_name = "ammonium concentration east boundary condition" ;
                NH4_east:units = "millimole_ammonium meter-3" ;
                NH4_east:field = "NH4_east, scalar, series" ;
                NH4_east:missing_value = 1.e+37 ;
                NH4_east:time = "bio_time" ;
        double NH4_south(bio_time, s_rho, xi_rho) ;
                NH4_south:long_name = "ammonium concentration south boundary condition" ;
                NH4_south:units = "millimole_ammonium meter-3" ;
                NH4_south:field = "NH4_south, scalar, series" ;
                NH4_south:missing_value = 1.e+37 ;
                NH4_south:time = "bio_time" ;
        double NO3_east(bio_time, s_rho, eta_rho) ;
                NO3_east:long_name = "nitrate concentration east boundary condition" ;
                NO3_east:units = "millimole_nitrate meter-3" ;
                NO3_east:field = "NO3_east, scalar, series" ;
                NO3_east:missing_value = 1.e+37 ;
                NO3_east:time = "bio_time" ;
        double NO3_south(bio_time, s_rho, xi_rho) ;
                NO3_south:long_name = "nitrate concentration south boundary condition" ;
                NO3_south:units = "millimole_nitrate meter-3" ;
                NO3_south:field = "NO3_south, scalar, series" ;
                NO3_south:missing_value = 1.e+37 ;
                NO3_south:time = "bio_time" ;
        double PO4_east(bio_time, s_rho, eta_rho) ;
                PO4_east:long_name = "nitrate concentration east boundary condition" ;
                PO4_east:units = "millimole_nitrate meter-3" ;
                PO4_east:field = "NO3_east, scalar, series" ;
                PO4_east:missing_value = 1.e+37 ;
                PO4_east:time = "bio_time" ;
        double PO4_south(bio_time, s_rho, xi_rho) ;
                PO4_south:long_name = "nitrate concentration south boundary condition" ;
                PO4_south:units = "millimole_nitrate meter-3" ;
                PO4_south:field = "NO3_south, scalar, series" ;
                PO4_south:missing_value = 1.e+37 ;
                PO4_south:time = "bio_time" ;
        double PON_east(bio_time, s_rho, eta_rho) ;
                PON_east:long_name = "particulate organic nitrogen concentration east boundary condition" ;
                PON_east:units = "millimole_nitrogen meter-3" ;
                PON_east:field = "PON_east, scalar, series" ;
                PON_east:missing_value = 1.e+37 ;
                PON_east:time = "bio_time" ;
        double PON_south(bio_time, s_rho, xi_rho) ;
                PON_south:long_name = "particulate organic nitrogen concentration south boundary condition" ;
                PON_south:units = "millimole_nitrogen meter-3" ;
                PON_south:field = "PON_south, scalar, series" ;
                PON_south:missing_value = 1.e+37 ;
                PON_south:time = "bio_time" ;
        double POP_east(bio_time, s_rho, eta_rho) ;
                POP_east:long_name = "nitrate concentration east boundary condition" ;
                POP_east:units = "millimole_nitrate meter-3" ;
                POP_east:field = "NO3_east, scalar, series" ;
                POP_east:missing_value = 1.e+37 ;
                POP_east:time = "bio_time" ;
        double POP_south(bio_time, s_rho, xi_rho) ;
                POP_south:long_name = "nitrate concentration south boundary condition" ;
                POP_south:units = "millimole_nitrate meter-3" ;
                POP_south:field = "NO3_south, scalar, series" ;
                POP_south:missing_value = 1.e+37 ;
                POP_south:time = "bio_time" ;
        double Pzooplankton_east(bio_time, s_rho, eta_rho) ;
                Pzooplankton_east:long_name = "predator-zooplankton biomass east boundary condition" ;
                Pzooplankton_east:units = "millimole_nitrogen meter-3" ;
                Pzooplankton_east:field = "Pzooplankton_east, scalar, series" ;
                Pzooplankton_east:missing_value = 1.e+37 ;
                Pzooplankton_east:time = "bio_time" ;
        double Pzooplankton_south(bio_time, s_rho, xi_rho) ;
                Pzooplankton_south:long_name = "predator-zooplankton biomass south boundary condition" ;
                Pzooplankton_south:units = "millimole_nitrogen meter-3" ;
                Pzooplankton_south:field = "Pzooplankton_south, scalar, series" ;
                Pzooplankton_south:missing_value = 1.e+37 ;
                Pzooplankton_south:time = "bio_time" ;
        double SPCh_east(bio_time, s_rho, eta_rho) ;
                SPCh_east:long_name = "small phytoplankton chlorophyll concentration east boundary condition" ;
                SPCh_east:units = "milligrams_chlorophyll meter-3" ;
                SPCh_east:field = "SPCh_east, scalar, series" ;
                SPCh_east:missing_value = 1.e+37 ;
                SPCh_east:time = "bio_time" ;
        double SPCh_south(bio_time, s_rho, xi_rho) ;
                SPCh_south:long_name = "small phytoplankton chlorophyll concentration south boundary condition" ;
                SPCh_south:units = "milligrams_chlorophyll meter-3" ;
                SPCh_south:field = "SPCh_south, scalar, series" ;
                SPCh_south:missing_value = 1.e+37 ;
                SPCh_south:time = "bio_time" ;
        double SiOH4_east(bio_time, s_rho, eta_rho) ;
                SiOH4_east:long_name = "silicate concentration east boundary condition" ;
                SiOH4_east:units = "millimole_silicate meter-3" ;
                SiOH4_east:field = "SiOH4_east, scalar, series" ;
                SiOH4_east:missing_value = 1.e+37 ;
                SiOH4_east:time = "bio_time" ;
        double SiOH4_south(bio_time, s_rho, xi_rho) ;
                SiOH4_south:long_name = "silicate concentration south boundary condition" ;
                SiOH4_south:units = "millimole_silicate meter-3" ;
                SiOH4_south:field = "SiOH4_south, scalar, series" ;
                SiOH4_south:missing_value = 1.e+37 ;
                SiOH4_south:time = "bio_time" ;
        float TIC_east(bio_time, s_rho, eta_rho) ;
                TIC_east:long_name = "TIC eastern boundary condition" ;
                TIC_east:units = "millimole_carbon meter-3" ;
                TIC_east:field = "TIC_east, scalar, series" ;
                TIC_east:missing_value = 1.e+37 ;
                TIC_east:time = "bio_time" ;
        float TIC_south(bio_time, s_rho, xi_rho) ;
                TIC_south:long_name = "TIC southern boundary condition" ;
                TIC_south:units = "millimole_carbon meter-3" ;
                TIC_south:field = "TIC_south, scalar, series" ;
                TIC_south:missing_value = 1.e+37 ;
                TIC_south:time = "bio_time" ;
        float alkalinity_east(bio_time, s_rho, eta_rho) ;
                alkalinity_east:long_name = "alkalinity eastern boundary condition" ;
                alkalinity_east:units = "milliequivalents meter-3" ;
                alkalinity_east:field = "alkalinity_east, scalar, series" ;
                alkalinity_east:missing_value = 1.e+37 ;
                alkalinity_east:time = "bio_time" ;
        float alkalinity_south(bio_time, s_rho, xi_rho) ;
                alkalinity_south:long_name = "alkalinity southern boundary condition" ;
                alkalinity_south:units = "milliequivalents meter-3" ;
                alkalinity_south:field = "alkalinity_south, scalar, series" ;
                alkalinity_south:missing_value = 1.e+37 ;
                alkalinity_south:time = "bio_time" ;
        double bio_time(bio_time) ;
                bio_time:units = "days since 1858-11-17 00:00:00 GMT" ;
                bio_time:field = "bio_time, scalar, series" ;
        double diatom_east(bio_time, s_rho, eta_rho) ;
                diatom_east:long_name = "diatom biomass east boundary condition" ;
                diatom_east:units = "millimole_nitrogen meter-3" ;
                diatom_east:field = "diatom_east, scalar, series" ;
                diatom_east:missing_value = 1.e+37 ;
                diatom_east:time = "bio_time" ;
        double diatom_south(bio_time, s_rho, xi_rho) ;
                diatom_south:long_name = "diatom biomass south boundary condition" ;
                diatom_south:units = "millimole_nitrogen meter-3" ;
                diatom_south:field = "diatom_south, scalar, series" ;
                diatom_south:missing_value = 1.e+37 ;
                diatom_south:time = "bio_time" ;
        double mesozooplankton_east(bio_time, s_rho, eta_rho) ;
                mesozooplankton_east:long_name = "mesozooplankton biomass east boundary condition" ;
                mesozooplankton_east:units = "millimole_nitrogen meter-3" ;
                mesozooplankton_east:field = "mesozooplankton_east, scalar, series" ;
                mesozooplankton_east:missing_value = 1.e+37 ;
                mesozooplankton_east:time = "bio_time" ;
        double mesozooplankton_south(bio_time, s_rho, xi_rho) ;
                mesozooplankton_south:long_name = "mesozooplankton biomass south boundary condition" ;
                mesozooplankton_south:units = "millimole_nitrogen meter-3" ;
                mesozooplankton_south:field = "mesozooplankton_south, scalar, series" ;
                mesozooplankton_south:missing_value = 1.e+37 ;
                mesozooplankton_south:time = "bio_time" ;
        double microzooplankton_east(bio_time, s_rho, eta_rho) ;
                microzooplankton_east:long_name = "microzooplankton biomass east boundary condition" ;
                microzooplankton_east:units = "millimole_nitrogen meter-3" ;
                microzooplankton_east:field = "microzooplankton_east, scalar, series" ;
                microzooplankton_east:missing_value = 1.e+37 ;
                microzooplankton_east:time = "bio_time" ;
        double microzooplankton_south(bio_time, s_rho, xi_rho) ;
                microzooplankton_south:long_name = "microzooplankton biomass south boundary condition" ;
                microzooplankton_south:units = "millimole_nitrogen meter-3" ;
                microzooplankton_south:field = "microzooplankton_south, scalar, series" ;
                microzooplankton_south:missing_value = 1.e+37 ;
                microzooplankton_south:time = "bio_time" ;
        double mud_east_01(bio_time, s_rho, eta_rho) ;
                mud_east_01:long_name = "suspended cohesive sediment easthern boundary condition" ;
                mud_east_01:units = "kilogram meter-3" ;
                mud_east_01:field = "mud_east_01, scalar, series" ;
                mud_east_01:missing_value = 1.e+37 ;
                mud_east_01:time = "bio_time" ;
        double mud_east_02(bio_time, s_rho, eta_rho) ;
                mud_east_02:long_name = "suspended cohesive sediment easthern boundary condition" ;
                mud_east_02:units = "kilogram meter-3" ;
                mud_east_02:field = "mud_east_01, scalar, series" ;
                mud_east_02:missing_value = 1.e+37 ;
                mud_east_02:time = "bio_time" ;
        double mud_south_01(bio_time, s_rho, xi_rho) ;
                mud_south_01:long_name = "suspended cohesive sediment southern boundary condition" ;
                mud_south_01:units = "kilogram meter-3" ;
                mud_south_01:field = "mud_south_01, scalar, series" ;
                mud_south_01:missing_value = 1.e+37 ;
                mud_south_01:time = "bio_time" ;
        double mud_south_02(bio_time, s_rho, xi_rho) ;
                mud_south_02:long_name = "suspended cohesive sediment southern boundary condition" ;
                mud_south_02:units = "kilogram meter-3" ;
                mud_south_02:field = "mud_south_01, scalar, series" ;
                mud_south_02:missing_value = 1.e+37 ;
                mud_south_02:time = "bio_time" ;
        double nanophytoplankton_east(bio_time, s_rho, eta_rho) ;
                nanophytoplankton_east:long_name = "nanophytoplankton biomass east boundary condition" ;
                nanophytoplankton_east:units = "millimole_nitrogen meter-3" ;
                nanophytoplankton_east:field = "nanophytoplankton_east, scalar, series" ;
                nanophytoplankton_east:missing_value = 1.e+37 ;
                nanophytoplankton_east:time = "bio_time" ;
        double nanophytoplankton_south(bio_time, s_rho, xi_rho) ;
                nanophytoplankton_south:long_name = "nanophytoplankton biomass south boundary condition" ;
                nanophytoplankton_south:units = "millimole_nitrogen meter-3" ;
                nanophytoplankton_south:field = "nanophytoplankton_south, scalar, series" ;
                nanophytoplankton_south:missing_value = 1.e+37 ;
                nanophytoplankton_south:time = "bio_time" ;
        float ocean_time(time) ;
                ocean_time:long_name = "open boundary conditions time" ;
                ocean_time:units = "days since 1858-11-17 00:00:00" ;
                ocean_time:field = "time, scalar, series" ;
        double opal_east(bio_time, s_rho, eta_rho) ;
                opal_east:long_name = "particulate organic silica concentration east boundary condition" ;
                opal_east:units = "millimole_silica meter-3" ;
                opal_east:field = "opal_east, scalar, series" ;
                opal_east:missing_value = 1.e+37 ;
                opal_east:time = "bio_time" ;
        double opal_south(bio_time, s_rho, xi_rho) ;
                opal_south:long_name = "particulate organic silica concentration south boundary condition" ;
                opal_south:units = "millimole_silica meter-3" ;
                opal_south:field = "opal_south, scalar, series" ;
                opal_south:missing_value = 1.e+37 ;
                opal_south:time = "bio_time" ;
        double oxyg_east(bio_time, s_rho, eta_rho) ;
                oxyg_east:long_name = "oxygen east boundary condition" ;
                oxyg_east:units = "millimole_oxygen meter-3" ;
                oxyg_east:field = "oxyg_east, scalar, series" ;
                oxyg_east:missing_value = 1.e+37 ;
                oxyg_east:time = "bio_time" ;
        double oxyg_south(bio_time, s_rho, xi_rho) ;
                oxyg_south:long_name = "oxygen southern boundary condition" ;
                oxyg_south:units = "millimole_oxygen meter-3" ;
                oxyg_south:field = "oxyg_south, scalar, series" ;
                oxyg_south:missing_value = 1.e+37 ;
                oxyg_south:time = "bio_time" ;
        double pH_east(bio_time, s_rho, eta_rho) ;
                pH_east:long_name = "pH east boundary condition" ;
                pH_east:units = "milligrams_pH meter-3" ;
                pH_east:field = "pH_east, scalar, series" ;
                pH_east:missing_value = 1.e+37 ;
                pH_east:time = "bio_time" ;
        double pH_south(bio_time, s_rho, xi_rho) ;
                pH_south:long_name = "pH south boundary condition" ;
                pH_south:units = "milligrams_pH meter-3" ;
                pH_south:field = "pH_south, scalar, series" ;
                pH_south:missing_value = 1.e+37 ;
                pH_south:time = "bio_time" ;
        float salt_east(time, s_rho, eta_rho) ;
                salt_east:long_name = "salinity east boundary condition" ;
                salt_east:units = "PSU" ;
                salt_east:field = "salt_east, scalar, series" ;
                salt_east:time = "ocean_time" ;
        float salt_south(time, s_rho, xi_rho) ;
                salt_south:long_name = "salinity south boundary condition" ;
                salt_south:units = "PSU" ;
                salt_south:field = "salt_south, scalar, series" ;
                salt_south:time = "ocean_time" ;
        double sand_east_01(bio_time, s_rho, eta_rho) ;
                sand_east_01:long_name = "suspended noncohesive sediment easthern boundary condition" ;
                sand_east_01:units = "kilogram meter-3" ;
                sand_east_01:field = "sand_east_01, scalar, series" ;
                sand_east_01:missing_value = 1.e+37 ;
                sand_east_01:time = "bio_time" ;
        double sand_south_01(bio_time, s_rho, xi_rho) ;
                sand_south_01:long_name = "suspended noncohesive sediment southern boundary condition" ;
                sand_south_01:units = "kilogram meter-3" ;
                sand_south_01:field = "sand_south_01, scalar, series" ;
                sand_south_01:missing_value = 1.e+37 ;
                sand_south_01:time = "bio_time" ;
        float temp_east(time, s_rho, eta_rho) ;
                temp_east:long_name = "potential temperature east boundary condition" ;
                temp_east:units = "Celcius" ;
                temp_east:field = "temp_east, scalar, series" ;
                temp_east:time = "ocean_time" ;
        float temp_south(time, s_rho, xi_rho) ;
                temp_south:long_name = "potential temperature south boundary condition" ;
                temp_south:units = "Celcius" ;
                temp_south:field = "temp_south, scalar, series" ;
                temp_south:time = "ocean_time" ;
        float u_east(time, s_rho, eta_u) ;
                u_east:long_name = "3D u-momentum east boundary condition" ;
                u_east:units = "meter second-1" ;
                u_east:field = "u_east, scalar, series" ;
                u_east:time = "ocean_time" ;
        float u_south(time, s_rho, xi_u) ;
                u_south:long_name = "3D u-momentum south boundary condition" ;
                u_south:units = "meter second-1" ;
                u_south:field = "u_south, scalar, series" ;
                u_south:time = "ocean_time" ;
        float ubar_east(time, eta_u) ;
                ubar_east:long_name = "2D u-momentum east boundary condition" ;
                ubar_east:units = "meter second-1" ;
                ubar_east:field = "ubar_east, scalar, series" ;
                ubar_east:time = "ocean_time" ;
        float ubar_south(time, xi_u) ;
                ubar_south:long_name = "2D u-momentum south boundary condition" ;
                ubar_south:units = "meter second-1" ;
                ubar_south:field = "ubar_south, scalar, series" ;
                ubar_south:time = "ocean_time" ;
        float v_east(time, s_rho, eta_v) ;
                v_east:long_name = "3D v-momentum east boundary condition" ;
                v_east:units = "meter second-1" ;
                v_east:field = "v_east, scalar, series" ;
                v_east:time = "ocean_time" ;
        float v_south(time, s_rho, xi_v) ;
                v_south:long_name = "3D v-momentum south boundary condition" ;
                v_south:units = "meter second-1" ;
                v_south:field = "v_south, scalar, series" ;
                v_south:time = "ocean_time" ;
        float vbar_east(time, eta_v) ;
                vbar_east:long_name = "2D v-momentum east boundary condition" ;
                vbar_east:units = "meter second-1" ;
                vbar_east:field = "vbar_east, scalar, series" ;
                vbar_east:time = "ocean_time" ;
        float vbar_south(time, xi_v) ;
                vbar_south:long_name = "2D v-momentum south boundary condition" ;
                vbar_south:units = "meter second-1" ;
                vbar_south:field = "vbar_south, scalar, series" ;
                vbar_south:time = "ocean_time" ;
        float zeta_east(time, eta_rho) ;
                zeta_east:long_name = "free surface east boundary condition" ;
                zeta_east:units = "meter" ;
                zeta_east:field = "zeta_east, scalar, series" ;
                zeta_east:time = "ocean_time" ;
        float zeta_south(time, xi_rho) ;
                zeta_south:long_name = "free surface south boundary condition" ;
                zeta_south:units = "meter" ;
                zeta_south:field = "zeta_south, scalar, series" ;
                zeta_south:time = "ocean_time" ;
        double DOC_east(bio_time, s_rho, eta_rho) ;
                DOC_east:long_name = "carbon detritus east boundary condition" ;
                DOC_east:units = "milligrams_detritusC meter-3" ;
                DOC_east:field = "CalC_east, scalar, series" ;
                DOC_east:missing_value = 1.e+37 ;
                DOC_east:time = "bio_time" ;
        double DOC_south(bio_time, s_rho, xi_rho) ;
                DOC_south:long_name = "carbon detritus south boundary condition" ;
                DOC_south:units = "milligrams_detritusC meter-3" ;
                DOC_south:field = "CalC_south, scalar, series" ;
                DOC_south:missing_value = 1.e+37 ;
                DOC_south:time = "bio_time" ;
